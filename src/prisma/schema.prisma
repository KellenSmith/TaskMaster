generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id                String           @id @default(uuid())
    firstName         String
    surName           String
    nickname          String
    email             String           @unique
    phone             String           @unique
    created           DateTime         @default(now())
    membershipRenewed DateTime? // Membership is invalid if missing or expired
    role              String           @default("user") // user, admin
    userCredentials   UserCredentials?

    @@map("users") // Map to table named "users"
}

// No users can log in without credentials.
// Admins can validate membership to create credentials for user.
model UserCredentials {
    id             String @id @default(uuid())
    user           User   @relation(fields: [email], references: [email])
    email          String @unique // relation scalar field (used in the `@relation` attribute above)
    salt           String
    hashedPassword String

    @@map("user_credentials")
}
